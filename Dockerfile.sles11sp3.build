# Base Image
FROM armdocker.rnd.ericsson.se/baseimages/sles:11sp3

ARG COMMIT=null
ARG REPOSITORY=null

LABEL commit=$COMMIT
LABEL repository=$REPOSITORY

# Clean Zypper Repositories
RUN rm -rf /etc/zypp/repos.d/*

# Add Zypper Repositories
RUN zypper ar -C -G -f https://arm.sero.gic.ericsson.se/artifactory/proj-suse-repos-rpm-local/SLE11/SLE11-SDK-SP3-Pool/sle-11-x86_64/ SLE11-SP3-SDK-Pool
RUN zypper ar -C -G -f https://arm.sero.gic.ericsson.se/artifactory/proj-suse-repos-rpm-local/SLE11/SLE11-SDK-SP3-Updates/sle-11-x86_64/ SLE11-SP3-SDK-Updates
RUN zypper ar -C -G -f https://arm.sero.gic.ericsson.se/artifactory/proj-suse-repos-rpm-local/SLE11/SLES11-SP3-Updates/sle-11-x86_64/ SLES11-SP3-Updates
RUN zypper ar -C -G -f https://arm.sero.gic.ericsson.se/artifactory/proj-suse-repos-rpm-local/SLE12/SLE12-SP2-SDK-Pool/x86_64/ SLES11-SP3-Pool

# Refresh repositories
RUN zypper lr

###############################################
## Libraries and Tools from the Repositories ##
###############################################

# Image Utility Tools
RUN zypper install -y vim

# Tools used at image creation time
RUN zypper install -y wget

# Compilation Tools
RUN zypper install -y tar
RUN zypper install -y make
RUN zypper install -y gcc
RUN zypper install -y gcc-c++
RUN zypper install -y autoconf

# COM Build Dependencies
RUN zypper install -y libopenssl-devel
RUN zypper install -y openldap2-devel
RUN zypper install -y net-snmp-devel
RUN zypper install -y fuse-devel
RUN zypper install -y ncurses-devel
RUN zypper install -y pam-devel

# This package includes the validation for rpm spec
RUN zypper install -y rpmlint

# FT Dependencies
RUN zypper install -y java-1_7_0-ibm-devel

# Tools used by the COM Build System
RUN zypper install -y zip
RUN zypper install -y patch

# CppCheck result parsing dependencies
RUN zypper install -y libxslt

# Documentation regeneration dependencies
RUN zypper install -y doxygen

#Gettext is needed to be able to compile Git 1.8.5.6 version
RUN zypper install -y gettext-runtime
RUN zypper install -y gettext-tools

# create the comuser
RUN useradd -m comuser
RUN echo "comuser:comuser" | chpasswd

#####################################################
## Custom Libraries and Tools compiled from source ##
#####################################################

# Maven 3.3.9 and its dependencies
RUN wget -P /tmp/src/ http://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz && \
    cd /opt/ && \
    tar xzf /tmp/src/apache-maven-3.3.9-bin.tar.gz && \
    rm -rf /tmp/src

ENV PATH /opt/apache-maven-3.3.9/bin:$PATH

# LTTNG dependencies

# Download, Compile and Install Python 2.7.10
# Default version of Python in SLES 11 SP3 is 2.6.9. Compilation of lttng-ust requires 2.7+
RUN mkdir -p /tmp/src && \
    wget -P /tmp/src/ https://www.python.org/ftp/python/2.7.10/Python-2.7.10.tgz && \
    cd /tmp/src/ && \
    tar xf Python-2.7.10.tgz && \
    cd /tmp/src/Python-2.7.10 && \
    ./configure --prefix=/usr/ && \
    make -j && \
    make install && \
    rm -rf /tmp/src

# Userspace-rcu (liburcu) 0.8.4
RUN mkdir -p /tmp/src && \
    wget -P /tmp/src/ https://www.lttng.org/files/urcu/userspace-rcu-0.8.4.tar.bz2 && \
    cd /tmp/src/ && \
    tar xf userspace-rcu-0.8.4.tar.bz2 && \
    cd /tmp/src/userspace-rcu-0.8.4 && \
    ./configure && \
    make -j && \
    make install && \
    rm -rf /tmp/src

# lttng-ust 2.4.0
RUN mkdir -p /tmp/src && \
    wget -P /tmp/src/ https://lttng.org/files/lttng-ust/lttng-ust-2.4.0.tar.bz2 && \
    cd /tmp/src/ && \
    tar xf lttng-ust-2.4.0.tar.bz2 && \
    cd /tmp/src/lttng-ust-2.4.0 && \
    ./configure && \
    make -j && \
    make install && \
    rm -rf /tmp/src

# Download, Compile and Install CMake 2.8.5
RUN mkdir -p /tmp/src && \
    wget -P /tmp/src/ --no-check-certificate https://cmake.org/files/v2.8/cmake-2.8.5.tar.gz && \
    cd /tmp/src/ && \
    tar xzf cmake-2.8.5.tar.gz && \
    cd /tmp/src/cmake-2.8.5 && \
    ./configure && \
    make -j && \
    make install && \
    rm -rf /tmp/src

# Download, Compile and Install Astyle 2.05.1
RUN mkdir -p /tmp/src && \
    wget -P /tmp/src/ https://vorboss.dl.sourceforge.net/project/astyle/astyle/astyle%202.05.1/astyle_2.05.1_linux.tar.gz && \
    cd /tmp/src/ && \
    tar xzf astyle_2.05.1_linux.tar.gz && \
    cd /tmp/src/astyle/build/gcc && \
    make -j && \
    install /tmp/src/astyle/build/gcc/bin/astyle /usr/bin/ && \
    rm -rf /tmp/src

# Download, Compile and Install CppCheck 1.46
RUN mkdir -p /tmp/src && \
    wget -P /tmp/src/ --no-check-certificate https://netix.dl.sourceforge.net/project/cppcheck/cppcheck/1.46/cppcheck-1.46.tar.gz && \
    cd /tmp/src/ && \
    tar xzf cppcheck-1.46.tar.gz && \
    cd /tmp/src/cppcheck-1.46/ && \
    make -j && \
    make install && \
    rm -rf /tmp/src

# Download, Compile and Install Git 1.8.5.6
# Git 1.7.4, the version in SLES11 zypper repo, does not support the -C flag which is needed for the build scripts to work
RUN mkdir -p /tmp/src && \
    wget -P /tmp/src/ https://www.kernel.org/pub/software/scm/git/git-1.8.5.6.tar.gz && \
    cd /tmp/src/ && \
    tar xzf git-1.8.5.6.tar.gz && \
    cd /tmp/src/git-1.8.5.6/ && \
    /tmp/src/git-1.8.5.6/configure shared --without-tcltk && \
    make -j && \
    make install && \
    rm -rf /tmp/src

# copy the build and comlib scripts
COPY scripts/buildscripts /usr/src/scripts/buildscripts
COPY scripts/testscripts /usr/src/scripts/testscripts
COPY scripts/comlib /usr/src/scripts/comlib

# install the build script
RUN bash /usr/src/scripts/buildscripts/install.sh

# install the test scripts
RUN bash /usr/src/scripts/testscripts/install.sh

# install CIRPA dependecies
COPY cirpa/cirpa-utils /cirpa-utils
ADD https://bootstrap.pypa.io/get-pip.py /
RUN python get-pip.py && pip install /cirpa-utils

# install the comlib module
RUN pip install /usr/src/scripts/comlib/

# install pyyaml
RUN pip install pyyaml
