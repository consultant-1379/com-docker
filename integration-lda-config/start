#!/bin/bash
#   This script creates a cluster using vagrant and installs required cba stack
#
#   Prerequisites:
#       *   LDA box with user input version must exist in artifactory
#
#   The script will perform the following actions:
#       1.  Create the cluster

set -o errexit
set -o pipefail

function myHelp () {
# Script used to resize the cluster.
cat <<-END
Usage:
------
   -h | --help
     Display this help
     Provide arguments with required cluster size and optional versionFile

   Syntax: ./start 1+0

   Example: ./start 1+1

END
}

# Exception Handling
# run if user hits control-c
function control_c()
{
  echo -en "\nwe got a ctrl+c lets clean up and exit\n"
  exit
}

# trap keyboard interrupt (control-c)
trap control_c SIGINT

CLUSTER_SIZE=$1

# Validate clusterSize
NODE_REGEX="^[1,2][+][0,1,2]$"
if [[ ! $CLUSTER_SIZE  =~ ${NODE_REGEX} ]]; then
    echo "Error: Cluster Size can only be 1+0,1+1,2+0 or 2+2"
    myHelp
    exit 1
fi

# Validate the number of arguments passed to the script
if [ $# -ne 1 ] && [ $# -ne 2 ] && [ $# -ne 3 ]; then
   echo "Error: Invalid number of arguments passed"
   myHelp
   exit 1
fi

if [ $# -eq 2 ]; then
   if [ $2 == "upgrade" ] || [ $2 == "restore" ]; then
      BRF_ACTION=$2
   else
      EXTERNAL_FS=$2
   fi
fi

if [ $# -eq 3 ]; then
   BRF_ACTION=$2
   EXTERNAL_FS=$3
fi

# Start libvirt
set +o errexit
start-libvirt

echo "Adding lda.box with name lda"
vagrant box add /lda.box --name "lda" > /dev/null

# Generating a Vagrant file in run-time
# CLUSTER_SIZE and EXTERNAL_FS(optional) are parameters to this script.
./genVagrantfile $CLUSTER_SIZE $EXTERNAL_FS
set -o errexit

# Create config_drive using gendrive tool
gendrive init --output /config_drives
sed -i "s/#sshkey_path/sshkey_path/g" /config_drives/gendrive.yaml

if [ "$EXTERNAL_FS" ]; then
    case $1 in
        "1+0") sed -i "s/SC-2/FS-1/g" /config_drives/gendrive.yaml ;;
        "1+1")
             sed -i "s/SC-2/PL-2/g" /config_drives/gendrive.yaml
             sed -i "/PL-2/a \ - FS-1\\" /config_drives/gendrive.yaml
             ;;
        "2+0") sed -i "/SC-2/a \ - FS-1\\" /config_drives/gendrive.yaml ;;
        "2+2")
             sed -i "/SC-2/a \ - PL-3\\" /config_drives/gendrive.yaml
             sed -i "/PL-3/a \ - PL-4\\" /config_drives/gendrive.yaml
             sed -i "/PL-4/a \ - FS-1\\" /config_drives/gendrive.yaml
             ;;
        *)
         echo "Error: Cluster Size can only be 1+0,1+1,2+0 or 2+2"
         exit 1
         ;;
    esac
else
    case $1 in
        "1+0") sed -i "/SC-2/d" /config_drives/gendrive.yaml ;;
        "1+1") sed -i "s/SC-2/PL-2/g" /config_drives/gendrive.yaml ;;
        "2+0") ;;
        "2+2")
             sed -i "/SC-2/a \ - PL-3\\" /config_drives/gendrive.yaml
             sed -i "/PL-3/a \ - PL-4\\" /config_drives/gendrive.yaml
             ;;
        *)
         echo "Error: Cluster Size can only be 1+0,1+1,2+0 or 2+2"
         exit 1
         ;;
    esac
fi

if [ ! -z "$BRF_ACTION" ]; then
    cp /insecure_keys/id_rsa.pub /root/.ssh/authorized_keys
    cp /insecure_keys/id_rsa.pub /root/.ssh/id_rsa.pub
    cp /insecure_keys/id_rsa /root/.ssh/id_rsa
    cp /cloud-init-template.yaml /config_drives/cloud-init-template.yaml
    CONTAINER_IP=$(ifconfig eth0 | awk -F ' *|:' '/inet addr/{print $4}')
    sed -i "s/CONTAINER_IP/${CONTAINER_IP}/g" /config_drives/cloud-init-template.yaml
fi

if [ $EXTERNAL_FS ] ; then
    gendrive create --ovf /externalFs/ovf-env.xml --output /config_drives
else
    gendrive create --ovf /ovf-env.xml --output /config_drives
fi


# Bring up the cluster
vagrant up --provider=libvirt
./create_comtestuser
echo "Cluster prepared successfully"
